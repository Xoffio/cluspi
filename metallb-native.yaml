- kind: Namespace
  metadata:
    labels:
      pod-security.kubernetes.io/warn: privileged
      pod-security.kubernetes.io/audit: privileged
      pod-security.kubernetes.io/enforce: privileged
    name: metallb-system
  apiVersion: v1
- spec:
    names:
      kind: AddressPool
      singular: addresspool
      listKind: AddressPoolList
      plural: addresspools
    conversion:
      webhook:
        conversionReviewVersions:
        - v1alpha1
        - v1beta1
        clientConfig:
          service:
            path: /convert
            namespace: metallb-system
            name: webhook-service
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGWlRDQ0EwMmdBd0lCQWdJVU5GRW1XcTM3MVpKdGkrMmlSQzk1WmpBV1MxZ3dEUVlKS29aSWh2Y05BUUVMDQpCUUF3UWpFTE1Ba0dBMVVFQmhNQ1dGZ3hGVEFUQmdOVkJBY01ERVJsWm1GMWJIUWdRMmwwZVRFY01Cb0dBMVVFDQpDZ3dUUkdWbVlYVnNkQ0JEYjIxd1lXNTVJRXgwWkRBZUZ3MHlNakEzTVRrd09UTXlNek5hRncweU1qQTRNVGd3DQpPVE15TXpOYU1FSXhDekFKQmdOVkJBWVRBbGhZTVJVd0V3WURWUVFIREF4RVpXWmhkV3gwSUVOcGRIa3hIREFhDQpCZ05WQkFvTUUwUmxabUYxYkhRZ1EyOXRjR0Z1ZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDDQpEd0F3Z2dJS0FvSUNBUUNxVFpxMWZRcC9vYkdlenhES0o3OVB3Ny94azJwellualNzMlkzb1ZYSm5sRmM4YjVlDQpma2ZZQnY2bndscW1keW5PL2phWFBaQmRQSS82aFdOUDBkdVhadEtWU0NCUUpyZzEyOGNXb3F0MGNTN3pLb1VpDQpvcU1tQ0QvRXVBeFFNZjhRZDF2c1gvVllkZ0poVTZBRXJLZEpIaXpFOUJtUkNkTDBGMW1OVW55Rk82UnRtWFZUDQpidkxsTDVYeTc2R0FaQVBLOFB4aVlDa0NtbDdxN0VnTWNiOXlLWldCYmlxQ3VkTXE5TGJLNmdKNzF6YkZnSXV4DQo1L1pXK2JraTB2RlplWk9ZODUxb1psckFUNzJvMDI4NHNTWW9uN0pHZVZkY3NoUnh5R1VpSFpSTzdkaXZVTDVTDQpmM2JmSDFYbWY1ZDQzT0NWTWRuUUV2NWVaOG8zeWVLa3ZrbkZQUGVJMU9BbjdGbDlFRVNNR2dhOGFaSG1URSttDQpsLzlMSmdDYjBnQmtPT0M0WnV4bWh2aERKV1EzWnJCS3pMQlNUZXN0NWlLNVlwcXRWVVk2THRyRW9FelVTK1lsDQpwWndXY2VQWHlHeHM5ZURsR3lNVmQraW15Y3NTU1UvVno2Mmx6MnZCS21NTXBkYldDQWhud0RsRTVqU2dyMjRRDQp0eGNXLys2N3d5KzhuQlI3UXdqVTFITndVRjBzeERWdEwrZ1NHVERnSEVZSlhZelYvT05zMy94TkpoVFNPSkxNDQpoeXNVdyttaGdackdhbUdXcHVIVU1DUitvTWJzMTc1UkcrQjJnUFFHVytPTjJnUTRyOXN2b0ZBNHBBQm8xd1dLDQpRYjRhY3pmeVVscElBOVFoSmFsZEY3S3dPSHVlV3gwRUNrNXg0T2tvVDBvWVp0dzFiR0JjRGtaSmF3SURBUUFCDQpvMU13VVRBZEJnTlZIUTRFRmdRVW90UlNIUm9IWTEyRFZ4R0NCdEhpb1g2ZmVFQXdId1lEVlIwakJCZ3dGb0FVDQpvdFJTSFJvSFkxMkRWeEdDQnRIaW9YNmZlRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FnRUFSbkpsWWRjMTFHd0VxWnh6RDF2R3BDR2pDN2VWTlQ3aVY1d3IybXlybHdPYi9aUWFEa0xYDQpvVStaOVVXT1VlSXJTdzUydDdmQUpvVVAwSm5iYkMveVIrU1lqUGhvUXNiVHduOTc2ZldBWTduM3FMOXhCd1Y0DQphek41OXNjeUp0dlhMeUtOL2N5ak1ReDRLajBIMFg0bWJ6bzVZNUtzWWtYVU0vOEFPdWZMcEd0S1NGVGgrSEFDDQpab1Q5YnZHS25adnNHd0tYZFF0Wnh0akhaUjVqK3U3ZGtQOTJBT051RFNabS8rWVV4b2tBK09JbzdSR3BwSHNXDQo1ZTdNY0FTVXRtb1FORXd6dVFoVkJaRWQ1OGtKYjUrV0VWbGNzanlXNnRTbzErZ25tTWNqR1BsMWgxR2hVbjV4DQpFY0lWRnBIWXM5YWo1NmpBSjk1MVQvZjhMaWxmTlVnanBLQ0c1bnl0SUt3emxhOHNtdGlPdm1UNEpYbXBwSkI2DQo4bmdHRVluVjUrUTYwWFJ2OEhSSGp1VG9CRHVhaERrVDA2R1JGODU1d09FR2V4bkZpMXZYWUxLVllWb1V2MXRKDQo4dVdUR1pwNllDSVJldlBqbzg5ZytWTlJSaVFYUThJd0dybXE5c0RoVTlqTjA0SjdVL1RvRDFpNHE3VnlsRUc5DQorV1VGNkNLaEdBeTJIaEhwVncyTGFoOS9lUzdZMUZ1YURrWmhPZG1laG1BOCtqdHNZamJadnR5Mm1SWlF0UUZzDQpUU1VUUjREbUR2bVVPRVRmeStpRHdzK2RkWXVNTnJGeVVYV2dkMnpBQU4ydVl1UHFGY2pRcFNPODFzVTJTU3R3DQoxVzAyeUtYOGJEYmZFdjBzbUh3UzliQnFlSGo5NEM1Mjg0YXpsdTBmaUdpTm1OUEM4ckJLRmhBPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
      strategy: Webhook
    scope: Namespaced
    versions:
    - served: true
      storage: false
      deprecationWarning: metallb.io v1alpha1 AddressPool is deprecated
      schema:
        openAPIV3Schema:
          description: AddressPool is the Schema for the addresspools API.
          properties:
            status:
              description: AddressPoolStatus defines the observed state of AddressPool.
              type: object
            metadata:
              type: object
            spec:
              description: AddressPoolSpec defines the desired state of AddressPool.
              required:
              - addresses
              - protocol
              properties:
                addresses:
                  type: array
                  description: A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
                  items:
                    type: string
                protocol:
                  type: string
                  description: Protocol can be used to select how the announcement is done.
                  enum:
                  - layer2
                  - bgp
                bgpAdvertisements:
                  type: array
                  items:
                    properties:
                      aggregationLengthV6:
                        type: integer
                        default: 128
                        description: Optional, defaults to 128 (i.e. no aggregation) if not specified.
                        format: int32
                      communities:
                        description: BGP communities
                        items:
                          type: string
                        type: array
                      aggregationLength:
                        format: int32
                        type: integer
                        minimum: 1
                        default: 32
                        description: The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix.
                      localPref:
                        description: BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
                        format: int32
                        type: integer
                    type: object
                  description: When an IP is allocated from this pool, how should it be translated into BGP announcements?
                autoAssign:
                  description: AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
                  type: boolean
                  default: true
              type: object
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
          required:
          - spec
          type: object
      deprecated: true
      subresources:
        status: {}
      name: v1alpha1
    - deprecated: true
      served: true
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AddressPool represents a pool of IP addresses that can be allocated to LoadBalancer services. AddressPool is deprecated and being replaced by IPAddressPool.
          required:
          - spec
          properties:
            spec:
              type: object
              properties:
                protocol:
                  enum:
                  - layer2
                  - bgp
                  type: string
                  description: Protocol can be used to select how the announcement is done.
                addresses:
                  description: A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
                  items:
                    type: string
                  type: array
                autoAssign:
                  type: boolean
                  default: true
                  description: AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
                bgpAdvertisements:
                  description: Drives how an IP allocated from this pool should translated into BGP announcements.
                  type: array
                  items:
                    type: object
                    properties:
                      aggregationLength:
                        description: The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix.
                        minimum: 1
                        default: 32
                        type: integer
                        format: int32
                      aggregationLengthV6:
                        description: Optional, defaults to 128 (i.e. no aggregation) if not specified.
                        format: int32
                        default: 128
                        type: integer
                      communities:
                        items:
                          type: string
                        description: BGP communities to be associated with the given advertisement.
                        type: array
                      localPref:
                        type: integer
                        description: BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
                        format: int32
              description: AddressPoolSpec defines the desired state of AddressPool.
              required:
              - addresses
              - protocol
            status:
              description: AddressPoolStatus defines the observed state of AddressPool.
              type: object
            metadata:
              type: object
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: object
      subresources:
        status: {}
      storage: true
      deprecationWarning: metallb.io v1beta1 AddressPool is deprecated, consider using IPAddressPool
    group: metallb.io
  apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    name: addresspools.metallb.io
  status:
    acceptedNames:
      plural: ''
      kind: ''
    storedVersions: []
    conditions: []
- apiVersion: apiextensions.k8s.io/v1
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: null
    name: bfdprofiles.metallb.io
  status:
    storedVersions: []
    acceptedNames:
      plural: ''
      kind: ''
    conditions: []
  kind: CustomResourceDefinition
  spec:
    group: metallb.io
    scope: Namespaced
    names:
      plural: bfdprofiles
      kind: BFDProfile
      listKind: BFDProfileList
      singular: bfdprofile
    versions:
    - additionalPrinterColumns:
      - jsonPath: .spec.passiveMode
        type: boolean
        name: Passive Mode
      - name: Transmit Interval
        type: integer
        jsonPath: .spec.transmitInterval
      - jsonPath: .spec.receiveInterval
        name: Receive Interval
        type: integer
      - jsonPath: .spec.detectMultiplier
        name: Multiplier
        type: integer
      served: true
      subresources:
        status: {}
      name: v1beta1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              type: object
              description: BFDProfileSpec defines the desired state of BFDProfile.
              properties:
                passiveMode:
                  description: 'Mark session as passive: a passive session will not attempt to start the connection and will wait for control packets from peer before it begins replying.'
                  type: boolean
                receiveInterval:
                  description: The minimum interval that this system is capable of receiving control packets in milliseconds. Defaults to 300ms.
                  type: integer
                  format: int32
                  maximum: 60000
                  minimum: 10
                transmitInterval:
                  description: The minimum transmission interval (less jitter) that this system wants to use to send BFD control packets in milliseconds. Defaults to 300ms
                  maximum: 60000
                  minimum: 10
                  format: int32
                  type: integer
                detectMultiplier:
                  maximum: 255
                  description: Configures the detection multiplier to determine packet loss. The remote transmission interval will be multiplied by this value to determine the connection loss detection timer.
                  format: int32
                  minimum: 2
                  type: integer
                echoMode:
                  description: Enables or disables the echo transmission mode. This mode is disabled by default, and not supported on multi hops setups.
                  type: boolean
                minimumTtl:
                  type: integer
                  description: 'For multi hop sessions only: configure the minimum expected TTL for an incoming BFD control packet.'
                  format: int32
                  maximum: 254
                  minimum: 1
                echoInterval:
                  format: int32
                  minimum: 10
                  description: Configures the minimal echo receive transmission interval that this system is capable of handling in milliseconds. Defaults to 50ms
                  type: integer
                  maximum: 60000
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            status:
              description: BFDProfileStatus defines the observed state of BFDProfile.
              type: object
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            metadata:
              type: object
          description: BFDProfile represents the settings of the bfd session that can be optionally associated with a BGP session.
          type: object
      storage: true
- status:
    acceptedNames:
      plural: ''
      kind: ''
    conditions: []
    storedVersions: []
  metadata:
    name: bgpadvertisements.metallb.io
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: null
  apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  spec:
    names:
      listKind: BGPAdvertisementList
      kind: BGPAdvertisement
      singular: bgpadvertisement
      plural: bgpadvertisements
    versions:
    - subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: BGPAdvertisement allows to advertise the IPs coming from the selected IPAddressPools via BGP, setting the parameters of the BGP Advertisement.
          properties:
            status:
              type: object
              description: BGPAdvertisementStatus defines the observed state of BGPAdvertisement.
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            spec:
              description: BGPAdvertisementSpec defines the desired state of BGPAdvertisement.
              type: object
              properties:
                aggregationLengthV6:
                  format: int32
                  type: integer
                  default: 128
                  description: The aggregation-length advertisement option lets you “roll up” the /128s into a larger prefix. Defaults to 128. Works for IPv6 addresses.
                nodeSelectors:
                  type: array
                  items:
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      matchExpressions:
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          required:
                          - key
                          - operator
                          type: object
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              items:
                                type: string
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              type: array
                        type: array
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                    type: object
                  description: NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.
                peers:
                  items:
                    type: string
                  description: Peers limits the bgppeer to advertise the ips of the selected pools to. When empty, the loadbalancer IP is announced to all the BGPPeers configured.
                  type: array
                localPref:
                  format: int32
                  type: integer
                  description: The BGP LOCAL_PREF attribute which is used by BGP best path algorithm, Path with higher localpref is preferred over one with lower localpref.
                aggregationLength:
                  minimum: 1
                  default: 32
                  description: The aggregation-length advertisement option lets you “roll up” the /32s into a larger prefix. Defaults to 32. Works for IPv4 addresses.
                  format: int32
                  type: integer
                ipAddressPoolSelectors:
                  description: A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.
                  items:
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                    properties:
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        additionalProperties:
                          type: string
                        type: object
                      matchExpressions:
                        items:
                          type: object
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              type: string
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        type: array
                    type: object
                  type: array
                communities:
                  description: The BGP communities to be associated with the announcement. Each item can be a community of the form 1234:1234 or the name of an alias defined in the Community CRD.
                  type: array
                  items:
                    type: string
                ipAddressPools:
                  items:
                    type: string
                  type: array
                  description: The list of IPAddressPools to advertise via this advertisement, selected by name.
          type: object
      served: true
      name: v1beta1
      storage: true
      additionalPrinterColumns:
      - type: string
        name: IPAddressPools
        jsonPath: .spec.ipAddressPools
      - name: IPAddressPool Selectors
        type: string
        jsonPath: .spec.ipAddressPoolSelectors
      - name: Peers
        type: string
        jsonPath: .spec.peers
      - name: Node Selectors
        jsonPath: .spec.nodeSelectors
        type: string
        priority: 10
    group: metallb.io
    scope: Namespaced
- kind: CustomResourceDefinition
  spec:
    conversion:
      webhook:
        clientConfig:
          service:
            namespace: metallb-system
            name: webhook-service
            path: /convert
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGWlRDQ0EwMmdBd0lCQWdJVU5GRW1XcTM3MVpKdGkrMmlSQzk1WmpBV1MxZ3dEUVlKS29aSWh2Y05BUUVMDQpCUUF3UWpFTE1Ba0dBMVVFQmhNQ1dGZ3hGVEFUQmdOVkJBY01ERVJsWm1GMWJIUWdRMmwwZVRFY01Cb0dBMVVFDQpDZ3dUUkdWbVlYVnNkQ0JEYjIxd1lXNTVJRXgwWkRBZUZ3MHlNakEzTVRrd09UTXlNek5hRncweU1qQTRNVGd3DQpPVE15TXpOYU1FSXhDekFKQmdOVkJBWVRBbGhZTVJVd0V3WURWUVFIREF4RVpXWmhkV3gwSUVOcGRIa3hIREFhDQpCZ05WQkFvTUUwUmxabUYxYkhRZ1EyOXRjR0Z1ZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDDQpEd0F3Z2dJS0FvSUNBUUNxVFpxMWZRcC9vYkdlenhES0o3OVB3Ny94azJwellualNzMlkzb1ZYSm5sRmM4YjVlDQpma2ZZQnY2bndscW1keW5PL2phWFBaQmRQSS82aFdOUDBkdVhadEtWU0NCUUpyZzEyOGNXb3F0MGNTN3pLb1VpDQpvcU1tQ0QvRXVBeFFNZjhRZDF2c1gvVllkZ0poVTZBRXJLZEpIaXpFOUJtUkNkTDBGMW1OVW55Rk82UnRtWFZUDQpidkxsTDVYeTc2R0FaQVBLOFB4aVlDa0NtbDdxN0VnTWNiOXlLWldCYmlxQ3VkTXE5TGJLNmdKNzF6YkZnSXV4DQo1L1pXK2JraTB2RlplWk9ZODUxb1psckFUNzJvMDI4NHNTWW9uN0pHZVZkY3NoUnh5R1VpSFpSTzdkaXZVTDVTDQpmM2JmSDFYbWY1ZDQzT0NWTWRuUUV2NWVaOG8zeWVLa3ZrbkZQUGVJMU9BbjdGbDlFRVNNR2dhOGFaSG1URSttDQpsLzlMSmdDYjBnQmtPT0M0WnV4bWh2aERKV1EzWnJCS3pMQlNUZXN0NWlLNVlwcXRWVVk2THRyRW9FelVTK1lsDQpwWndXY2VQWHlHeHM5ZURsR3lNVmQraW15Y3NTU1UvVno2Mmx6MnZCS21NTXBkYldDQWhud0RsRTVqU2dyMjRRDQp0eGNXLys2N3d5KzhuQlI3UXdqVTFITndVRjBzeERWdEwrZ1NHVERnSEVZSlhZelYvT05zMy94TkpoVFNPSkxNDQpoeXNVdyttaGdackdhbUdXcHVIVU1DUitvTWJzMTc1UkcrQjJnUFFHVytPTjJnUTRyOXN2b0ZBNHBBQm8xd1dLDQpRYjRhY3pmeVVscElBOVFoSmFsZEY3S3dPSHVlV3gwRUNrNXg0T2tvVDBvWVp0dzFiR0JjRGtaSmF3SURBUUFCDQpvMU13VVRBZEJnTlZIUTRFRmdRVW90UlNIUm9IWTEyRFZ4R0NCdEhpb1g2ZmVFQXdId1lEVlIwakJCZ3dGb0FVDQpvdFJTSFJvSFkxMkRWeEdDQnRIaW9YNmZlRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FnRUFSbkpsWWRjMTFHd0VxWnh6RDF2R3BDR2pDN2VWTlQ3aVY1d3IybXlybHdPYi9aUWFEa0xYDQpvVStaOVVXT1VlSXJTdzUydDdmQUpvVVAwSm5iYkMveVIrU1lqUGhvUXNiVHduOTc2ZldBWTduM3FMOXhCd1Y0DQphek41OXNjeUp0dlhMeUtOL2N5ak1ReDRLajBIMFg0bWJ6bzVZNUtzWWtYVU0vOEFPdWZMcEd0S1NGVGgrSEFDDQpab1Q5YnZHS25adnNHd0tYZFF0Wnh0akhaUjVqK3U3ZGtQOTJBT051RFNabS8rWVV4b2tBK09JbzdSR3BwSHNXDQo1ZTdNY0FTVXRtb1FORXd6dVFoVkJaRWQ1OGtKYjUrV0VWbGNzanlXNnRTbzErZ25tTWNqR1BsMWgxR2hVbjV4DQpFY0lWRnBIWXM5YWo1NmpBSjk1MVQvZjhMaWxmTlVnanBLQ0c1bnl0SUt3emxhOHNtdGlPdm1UNEpYbXBwSkI2DQo4bmdHRVluVjUrUTYwWFJ2OEhSSGp1VG9CRHVhaERrVDA2R1JGODU1d09FR2V4bkZpMXZYWUxLVllWb1V2MXRKDQo4dVdUR1pwNllDSVJldlBqbzg5ZytWTlJSaVFYUThJd0dybXE5c0RoVTlqTjA0SjdVL1RvRDFpNHE3VnlsRUc5DQorV1VGNkNLaEdBeTJIaEhwVncyTGFoOS9lUzdZMUZ1YURrWmhPZG1laG1BOCtqdHNZamJadnR5Mm1SWlF0UUZzDQpUU1VUUjREbUR2bVVPRVRmeStpRHdzK2RkWXVNTnJGeVVYV2dkMnpBQU4ydVl1UHFGY2pRcFNPODFzVTJTU3R3DQoxVzAyeUtYOGJEYmZFdjBzbUh3UzliQnFlSGo5NEM1Mjg0YXpsdTBmaUdpTm1OUEM4ckJLRmhBPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
        conversionReviewVersions:
        - v1beta1
        - v1beta2
      strategy: Webhook
    group: metallb.io
    versions:
    - served: true
      storage: false
      name: v1beta1
      subresources:
        status: {}
      additionalPrinterColumns:
      - type: string
        jsonPath: .spec.peerAddress
        name: Address
      - jsonPath: .spec.peerASN
        name: ASN
        type: string
      - type: string
        name: BFD Profile
        jsonPath: .spec.bfdProfile
      - type: string
        jsonPath: .spec.ebgpMultiHop
        name: Multi Hops
      schema:
        openAPIV3Schema:
          type: object
          description: BGPPeer is the Schema for the peers API.
          properties:
            spec:
              description: BGPPeerSpec defines the desired state of Peer.
              type: object
              properties:
                peerPort:
                  type: integer
                  description: Port to dial when establishing the session.
                  minimum: 0
                  maximum: 16384
                nodeSelectors:
                  description: Only connect to this peer on nodes that match one of these selectors.
                  type: array
                  items:
                    properties:
                      matchExpressions:
                        type: array
                        items:
                          required:
                          - key
                          - operator
                          - values
                          type: object
                          properties:
                            values:
                              items:
                                type: string
                              minItems: 1
                              type: array
                            key:
                              type: string
                            operator:
                              type: string
                      matchLabels:
                        type: object
                        additionalProperties:
                          type: string
                    type: object
                peerAddress:
                  type: string
                  description: Address to dial when establishing the session.
                ebgpMultiHop:
                  description: EBGP peer is multi-hops away
                  type: boolean
                holdTime:
                  type: string
                  description: Requested BGP hold time, per RFC4271.
                peerASN:
                  minimum: 0
                  format: int32
                  maximum: 4294967295
                  type: integer
                  description: AS number to expect from the remote end of the session.
                password:
                  type: string
                  description: Authentication password for routers enforcing TCP MD5 authenticated sessions
                keepaliveTime:
                  description: Requested BGP keepalive time, per RFC4271.
                  type: string
                bfdProfile:
                  type: string
                myASN:
                  description: AS number to use for the local end of the session.
                  type: integer
                  maximum: 4294967295
                  format: int32
                  minimum: 0
                sourceAddress:
                  type: string
                  description: Source address to use when establishing the session.
                routerID:
                  description: BGP router ID to advertise to the peer
                  type: string
              required:
              - myASN
              - peerASN
              - peerAddress
            status:
              description: BGPPeerStatus defines the observed state of Peer.
              type: object
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            metadata:
              type: object
    - storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          properties:
            status:
              description: BGPPeerStatus defines the observed state of Peer.
              type: object
            spec:
              description: BGPPeerSpec defines the desired state of Peer.
              properties:
                password:
                  description: Authentication password for routers enforcing TCP MD5 authenticated sessions
                  type: string
                bfdProfile:
                  description: The name of the BFD Profile to be used for the BFD session associated to the BGP session. If not set, the BFD session won't be set up.
                  type: string
                peerASN:
                  format: int32
                  type: integer
                  description: AS number to expect from the remote end of the session.
                  minimum: 0
                  maximum: 4294967295
                passwordSecret:
                  description: passwordSecret is name of the authentication secret for BGP Peer. the secret must be of type "kubernetes.io/basic-auth", and created in the same namespace as the MetalLB deployment. The password is stored in the secret as the key "password".
                  type: object
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                peerAddress:
                  description: Address to dial when establishing the session.
                  type: string
                holdTime:
                  type: string
                  description: Requested BGP hold time, per RFC4271.
                nodeSelectors:
                  type: array
                  items:
                    type: object
                    properties:
                      matchLabels:
                        type: object
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        additionalProperties:
                          type: string
                      matchExpressions:
                        items:
                          type: object
                          properties:
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          required:
                          - key
                          - operator
                        type: array
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                  description: Only connect to this peer on nodes that match one of these selectors.
                ebgpMultiHop:
                  type: boolean
                  description: To set if the BGPPeer is multi-hops away. Needed for FRR mode only.
                peerPort:
                  type: integer
                  maximum: 16384
                  description: Port to dial when establishing the session.
                  minimum: 0
                  default: 179
                keepaliveTime:
                  description: Requested BGP keepalive time, per RFC4271.
                  type: string
                routerID:
                  type: string
                  description: BGP router ID to advertise to the peer
                sourceAddress:
                  type: string
                  description: Source address to use when establishing the session.
                myASN:
                  type: integer
                  format: int32
                  maximum: 4294967295
                  description: AS number to use for the local end of the session.
                  minimum: 0
              type: object
              required:
              - myASN
              - peerASN
              - peerAddress
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            apiVersion:
              type: string
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            metadata:
              type: object
          type: object
          description: BGPPeer is the Schema for the peers API.
      additionalPrinterColumns:
      - type: string
        name: Address
        jsonPath: .spec.peerAddress
      - type: string
        jsonPath: .spec.peerASN
        name: ASN
      - name: BFD Profile
        type: string
        jsonPath: .spec.bfdProfile
      - jsonPath: .spec.ebgpMultiHop
        type: string
        name: Multi Hops
      name: v1beta2
      served: true
    scope: Namespaced
    names:
      kind: BGPPeer
      singular: bgppeer
      plural: bgppeers
      listKind: BGPPeerList
  apiVersion: apiextensions.k8s.io/v1
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    name: bgppeers.metallb.io
  status:
    storedVersions: []
    conditions: []
    acceptedNames:
      kind: ''
      plural: ''
- apiVersion: apiextensions.k8s.io/v1
  metadata:
    creationTimestamp: null
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    name: communities.metallb.io
  kind: CustomResourceDefinition
  spec:
    names:
      plural: communities
      kind: Community
      listKind: CommunityList
      singular: community
    scope: Namespaced
    versions:
    - subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Community is a collection of aliases for communities. Users can define named aliases to be used in the BGPPeer CRD.
          type: object
          properties:
            spec:
              description: CommunitySpec defines the desired state of Community.
              type: object
              properties:
                communities:
                  items:
                    properties:
                      name:
                        type: string
                        description: The name of the alias for the community.
                      value:
                        description: The BGP community value corresponding to the given name.
                        type: string
                    type: object
                  type: array
            status:
              description: CommunityStatus defines the observed state of Community.
              type: object
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            metadata:
              type: object
            kind:
              type: string
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
      served: true
      storage: true
      name: v1beta1
    group: metallb.io
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- spec:
    names:
      singular: ipaddresspool
      kind: IPAddressPool
      plural: ipaddresspools
      listKind: IPAddressPoolList
    scope: Namespaced
    versions:
    - served: true
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            metadata:
              type: object
            spec:
              description: IPAddressPoolSpec defines the desired state of IPAddressPool.
              type: object
              required:
              - addresses
              properties:
                autoAssign:
                  type: boolean
                  default: true
                  description: AutoAssign flag used to prevent MetallB from automatic allocation for a pool.
                addresses:
                  description: A list of IP address ranges over which MetalLB has authority. You can list multiple ranges in a single pool, they will all share the same settings. Each range can be either a CIDR prefix, or an explicit start-end range of IPs.
                  type: array
                  items:
                    type: string
                avoidBuggyIPs:
                  description: AvoidBuggyIPs prevents addresses ending with .0 and .255 to be used by a pool.
                  type: boolean
                  default: false
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            status:
              type: object
              description: IPAddressPoolStatus defines the observed state of IPAddressPool.
          description: IPAddressPool represents a pool of IP addresses that can be allocated to LoadBalancer services.
          type: object
          required:
          - spec
      additionalPrinterColumns:
      - name: Auto Assign
        type: boolean
        jsonPath: .spec.autoAssign
      - jsonPath: .spec.avoidBuggyIPs
        name: Avoid Buggy IPs
        type: boolean
      - type: string
        name: Addresses
        jsonPath: .spec.addresses
      storage: true
      subresources:
        status: {}
      name: v1beta1
    group: metallb.io
  metadata:
    name: ipaddresspools.metallb.io
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: null
  status:
    conditions: []
    acceptedNames:
      kind: ''
      plural: ''
    storedVersions: []
  apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  spec:
    scope: Namespaced
    group: metallb.io
    versions:
    - name: v1beta1
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
      - name: IPAddressPools
        type: string
        jsonPath: .spec.ipAddressPools
      - jsonPath: .spec.ipAddressPoolSelectors
        name: IPAddressPool Selectors
        type: string
      - type: string
        jsonPath: .spec.interfaces
        name: Interfaces
      - name: Node Selectors
        jsonPath: .spec.nodeSelectors
        priority: 10
        type: string
      schema:
        openAPIV3Schema:
          type: object
          description: L2Advertisement allows to advertise the LoadBalancer IPs provided by the selected pools via L2.
          properties:
            status:
              description: L2AdvertisementStatus defines the observed state of L2Advertisement.
              type: object
            spec:
              description: L2AdvertisementSpec defines the desired state of L2Advertisement.
              properties:
                interfaces:
                  description: A list of interfaces to announce from. The LB IP will be announced only from these interfaces. If the field is not set, we advertise from all the interfaces on the host.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  items:
                    type: object
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                    properties:
                      matchExpressions:
                        type: array
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            values:
                              type: array
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                            operator:
                              type: string
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                      matchLabels:
                        type: object
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        additionalProperties:
                          type: string
                  type: array
                  description: NodeSelectors allows to limit the nodes to announce as next hops for the LoadBalancer IP. When empty, all the nodes having  are announced as next hops.
                ipAddressPools:
                  type: array
                  description: The list of IPAddressPools to advertise via this advertisement, selected by name.
                  items:
                    type: string
                ipAddressPoolSelectors:
                  type: array
                  description: A selector for the IPAddressPools which would get advertised via this advertisement. If no IPAddressPool is selected by this or by the list, the advertisement is applied to all the IPAddressPools.
                  items:
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      matchExpressions:
                        type: array
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          type: object
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              type: array
                              items:
                                type: string
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                          required:
                          - key
                          - operator
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                    type: object
              type: object
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            metadata:
              type: object
      served: true
    names:
      singular: l2advertisement
      listKind: L2AdvertisementList
      plural: l2advertisements
      kind: L2Advertisement
  status:
    conditions: []
    acceptedNames:
      plural: ''
      kind: ''
    storedVersions: []
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.7.0
    creationTimestamp: null
    name: l2advertisements.metallb.io
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: controller
    labels:
      app: metallb
    namespace: metallb-system
- kind: ServiceAccount
  metadata:
    name: speaker
    namespace: metallb-system
    labels:
      app: metallb
  apiVersion: v1
- kind: Role
  metadata:
    namespace: metallb-system
    labels:
      app: metallb
    name: controller
  rules:
  - resources:
    - secrets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
    apiGroups:
    - ''
  - verbs:
    - list
    resourceNames:
    - memberlist
    resources:
    - secrets
    apiGroups:
    - ''
  - resourceNames:
    - controller
    verbs:
    - get
    apiGroups:
    - apps
    resources:
    - deployments
  - verbs:
    - get
    - list
    apiGroups:
    - metallb.io
    resources:
    - bgppeers
  - apiGroups:
    - metallb.io
    verbs:
    - get
    - list
    - watch
    resources:
    - addresspools
  - resources:
    - bfdprofiles
    verbs:
    - get
    - list
    - watch
    apiGroups:
    - metallb.io
  - apiGroups:
    - metallb.io
    resources:
    - ipaddresspools
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - metallb.io
    resources:
    - bgpadvertisements
    verbs:
    - get
    - list
    - watch
  - resources:
    - l2advertisements
    verbs:
    - get
    - list
    - watch
    apiGroups:
    - metallb.io
  - resources:
    - communities
    apiGroups:
    - metallb.io
    verbs:
    - get
    - list
    - watch
  apiVersion: rbac.authorization.k8s.io/v1
- rules:
  - resources:
    - pods
    apiGroups:
    - ''
    verbs:
    - list
  - verbs:
    - get
    - list
    - watch
    resources:
    - secrets
    apiGroups:
    - ''
  - resources:
    - addresspools
    apiGroups:
    - metallb.io
    verbs:
    - get
    - list
    - watch
  - verbs:
    - get
    - list
    - watch
    resources:
    - bfdprofiles
    apiGroups:
    - metallb.io
  - resources:
    - bgppeers
    verbs:
    - get
    - list
    - watch
    apiGroups:
    - metallb.io
  - apiGroups:
    - metallb.io
    resources:
    - l2advertisements
    verbs:
    - get
    - list
    - watch
  - resources:
    - bgpadvertisements
    verbs:
    - get
    - list
    - watch
    apiGroups:
    - metallb.io
  - verbs:
    - get
    - list
    - watch
    resources:
    - ipaddresspools
    apiGroups:
    - metallb.io
  - verbs:
    - get
    - list
    - watch
    resources:
    - communities
    apiGroups:
    - metallb.io
  metadata:
    namespace: metallb-system
    name: pod-lister
    labels:
      app: metallb
  apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
- metadata:
    labels:
      app: metallb
    name: metallb-system:controller
  kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1
  rules:
  - verbs:
    - get
    - list
    - watch
    apiGroups:
    - ''
    resources:
    - services
  - apiGroups:
    - ''
    verbs:
    - update
    resources:
    - services/status
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - policy
    verbs:
    - use
    resourceNames:
    - controller
    resources:
    - podsecuritypolicies
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    - mutatingwebhookconfigurations
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- metadata:
    name: metallb-system:speaker
    labels:
      app: metallb
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  rules:
  - resources:
    - services
    - endpoints
    - nodes
    apiGroups:
    - ''
    verbs:
    - get
    - list
    - watch
  - resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
    apiGroups:
    - discovery.k8s.io
  - resources:
    - events
    apiGroups:
    - ''
    verbs:
    - create
    - patch
  - apiGroups:
    - policy
    resourceNames:
    - speaker
    resources:
    - podsecuritypolicies
    verbs:
    - use
- metadata:
    namespace: metallb-system
    labels:
      app: metallb
    name: controller
  kind: RoleBinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    name: controller
    kind: Role
  apiVersion: rbac.authorization.k8s.io/v1
  subjects:
  - namespace: metallb-system
    kind: ServiceAccount
    name: controller
- subjects:
  - kind: ServiceAccount
    name: speaker
    namespace: metallb-system
  metadata:
    name: pod-lister
    labels:
      app: metallb
    namespace: metallb-system
  apiVersion: rbac.authorization.k8s.io/v1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: pod-lister
  kind: RoleBinding
- roleRef:
    name: metallb-system:controller
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io
  apiVersion: rbac.authorization.k8s.io/v1
  subjects:
  - name: controller
    namespace: metallb-system
    kind: ServiceAccount
  metadata:
    name: metallb-system:controller
    labels:
      app: metallb
  kind: ClusterRoleBinding
- subjects:
  - namespace: metallb-system
    kind: ServiceAccount
    name: speaker
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: metallb
    name: metallb-system:speaker
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: metallb-system:speaker
- metadata:
    name: webhook-server-cert
    namespace: metallb-system
  kind: Secret
  apiVersion: v1
- apiVersion: v1
  kind: Service
  metadata:
    namespace: metallb-system
    name: webhook-service
  spec:
    ports:
    - targetPort: 9443
      port: 443
    selector:
      component: controller
- metadata:
    namespace: metallb-system
    labels:
      component: controller
      app: metallb
    name: controller
  kind: Deployment
  spec:
    selector:
      matchLabels:
        app: metallb
        component: controller
    template:
      spec:
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: controller
        securityContext:
          runAsNonRoot: true
          fsGroup: 65534
          runAsUser: 65534
        terminationGracePeriodSeconds: 0
        containers:
        - args:
          - --port=7472
          - --log-level=info
          env:
          - value: memberlist
            name: METALLB_ML_SECRET_NAME
          - value: controller
            name: METALLB_DEPLOYMENT
          securityContext:
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          ports:
          - containerPort: 7472
            name: monitoring
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          readinessProbe:
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              port: monitoring
              path: /metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          image: quay.io/metallb/controller:v0.13.7
          livenessProbe:
            httpGet:
              path: /metrics
              port: monitoring
            initialDelaySeconds: 10
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 1
          name: controller
        volumes:
        - name: cert
          secret:
            secretName: webhook-server-cert
            defaultMode: 420
      metadata:
        labels:
          app: metallb
          component: controller
        annotations:
          prometheus.io/port: '7472'
          prometheus.io/scrape: 'true'
    revisionHistoryLimit: 3
  apiVersion: apps/v1
- metadata:
    namespace: metallb-system
    name: speaker
    labels:
      app: metallb
      component: speaker
  spec:
    template:
      metadata:
        annotations:
          prometheus.io/port: '7472'
          prometheus.io/scrape: 'true'
        labels:
          app: metallb
          component: speaker
      spec:
        terminationGracePeriodSeconds: 2
        tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        hostNetwork: true
        containers:
        - image: quay.io/metallb/speaker:v0.13.7
          args:
          - --port=7472
          - --log-level=info
          name: speaker
          env:
          - name: METALLB_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - valueFrom:
              fieldRef:
                fieldPath: status.hostIP
            name: METALLB_HOST
          - valueFrom:
              fieldRef:
                fieldPath: status.podIP
            name: METALLB_ML_BIND_ADDR
          - value: app=metallb,component=speaker
            name: METALLB_ML_LABELS
          - name: METALLB_ML_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: secretkey
                name: memberlist
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /metrics
              port: monitoring
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /metrics
              port: monitoring
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
          - name: monitoring
            containerPort: 7472
          - name: memberlist-tcp
            containerPort: 7946
          - containerPort: 7946
            name: memberlist-udp
            protocol: UDP
          securityContext:
            capabilities:
              drop:
              - ALL
              add:
              - NET_RAW
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        nodeSelector:
          kubernetes.io/os: linux
        serviceAccountName: speaker
    selector:
      matchLabels:
        app: metallb
        component: speaker
  apiVersion: apps/v1
  kind: DaemonSet
- kind: ValidatingWebhookConfiguration
  apiVersion: admissionregistration.k8s.io/v1
  webhooks:
  - rules:
    - apiGroups:
      - metallb.io
      resources:
      - bgppeers
      operations:
      - CREATE
      - UPDATE
      apiVersions:
      - v1beta2
    sideEffects: None
    clientConfig:
      service:
        namespace: metallb-system
        path: /validate-metallb-io-v1beta2-bgppeer
        name: webhook-service
    admissionReviewVersions:
    - v1
    failurePolicy: Fail
    name: bgppeersvalidationwebhook.metallb.io
  - admissionReviewVersions:
    - v1
    failurePolicy: Fail
    name: addresspoolvalidationwebhook.metallb.io
    clientConfig:
      service:
        path: /validate-metallb-io-v1beta1-addresspool
        name: webhook-service
        namespace: metallb-system
    rules:
    - operations:
      - CREATE
      - UPDATE
      resources:
      - addresspools
      apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
    sideEffects: None
  - admissionReviewVersions:
    - v1
    name: bfdprofilevalidationwebhook.metallb.io
    sideEffects: None
    clientConfig:
      service:
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-bfdprofile
        name: webhook-service
    failurePolicy: Fail
    rules:
    - operations:
      - CREATE
      - DELETE
      apiGroups:
      - metallb.io
      resources:
      - bfdprofiles
      apiVersions:
      - v1beta1
  - admissionReviewVersions:
    - v1
    failurePolicy: Fail
    rules:
    - operations:
      - CREATE
      - UPDATE
      apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      resources:
      - bgpadvertisements
    clientConfig:
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-bgpadvertisement
    sideEffects: None
    name: bgpadvertisementvalidationwebhook.metallb.io
  - clientConfig:
      service:
        path: /validate-metallb-io-v1beta1-community
        namespace: metallb-system
        name: webhook-service
    rules:
    - operations:
      - CREATE
      - UPDATE
      apiVersions:
      - v1beta1
      apiGroups:
      - metallb.io
      resources:
      - communities
    sideEffects: None
    admissionReviewVersions:
    - v1
    name: communityvalidationwebhook.metallb.io
    failurePolicy: Fail
  - name: ipaddresspoolvalidationwebhook.metallb.io
    sideEffects: None
    failurePolicy: Fail
    rules:
    - apiGroups:
      - metallb.io
      resources:
      - ipaddresspools
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
    admissionReviewVersions:
    - v1
    clientConfig:
      service:
        path: /validate-metallb-io-v1beta1-ipaddresspool
        namespace: metallb-system
        name: webhook-service
  - name: l2advertisementvalidationwebhook.metallb.io
    clientConfig:
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-l2advertisement
    admissionReviewVersions:
    - v1
    failurePolicy: Fail
    rules:
    - operations:
      - CREATE
      - UPDATE
      resources:
      - l2advertisements
      apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
    sideEffects: None
  metadata:
    creationTimestamp: null
    name: metallb-webhook-configuration
